<?xml version="1.0"?>
<!--
Implementation by the Keccak, Keyak and Ketje Teams, namely, Guido Bertoni,
Joan Daemen, MichaÃ«l Peeters, Gilles Van Assche and Ronny Van Keer, hereby
denoted as "the implementer".

For more information, feedback or questions, please refer to our websites:
http://keccak.noekeon.org/
http://keyak.noekeon.org/
http://ketje.noekeon.org/

To the extent possible under law, the implementer has waived all copyright
and related or neighboring rights to the source code in this file.
http://creativecommons.org/publicdomain/zero/1.0/
-->
<build all="all">
    <fragment name="CompactFIPS202">
        <c>Standalone/CompactFIPS202/Keccak-compact-test.c</c>
        <c>Standalone/CompactFIPS202/genKAT.c</c>
    </fragment>

    <target name="ReadableCompactFIPS202" inherits="CompactFIPS202">
        <c>Standalone/CompactFIPS202/Keccak-readable-and-compact.c</c>
        <define>TestAtBitLevel</define>
    </target>

    <target name="MoreCompactFIPS202" inherits="CompactFIPS202">
        <c>Standalone/CompactFIPS202/Keccak-more-compact.c</c>
        <define>TestAtBitLevel</define>
    </target>

    <target name="TweetableFIPS202" inherits="CompactFIPS202">
        <c>Standalone/CompactFIPS202/TweetableFIPS202.c</c>
        <c>Standalone/CompactFIPS202/TweetableFIPS202-stub.c</c>
    </target>

    <fragment name="common">
        <h>Common/brg_endian.h</h>
    </fragment>

    <fragment name="keccak" inherits="common">
        <c>Constructions/KeccakDuplex.c</c>
        <c>Constructions/KeccakSponge.c</c>
        <c>Modes/KeccakHash.c</c>
        <h>Constructions/KeccakDuplex.h</h>
        <h>Constructions/KeccakSponge.h</h>
        <h>Modes/KeccakHash.h</h>
    </fragment>

    <fragment name="KeccakTests" inherits="keccak timingSnP">
        <c>Tests/genKAT.c</c>
        <c>Tests/main.c</c>
        <c>Tests/testDuplex.c</c>
        <c>Tests/testSnP.c</c>
        <c>Tests/testSponge.c</c>
        <h>Tests/genKAT.h</h>
        <h>Tests/testDuplex.h</h>
        <h>Tests/testSnP.h</h>
        <h>Tests/testSponge.h</h>
    </fragment>

    <fragment name="KeccakSum" inherits="keccak">
        <c>Tests/base64.c</c>
        <c>Tests/KeccakSum.c</c>
        <h>Tests/base64.h</h>
    </fragment>

    <fragment name="optimized">
        <h>Common/brg_endian.h</h>
        <gcc>-fomit-frame-pointer</gcc>
        <gcc>-O3</gcc>
        <gcc>-g0</gcc>
        <gcc>-march=native</gcc>
        <gcc>-mtune=native</gcc>
    </fragment>

    <fragment name="timingSnP">
        <c>Tests/timingSnP.c</c>
        <h>Tests/timing.h</h>
        <h>Tests/timingSnP.h</h>
        <h>Constructions/KeccakSponge.h</h>
    </fragment>

    <fragment name="FBWL-default">
        <c>SnP/SnP-FBWL-default.c</c>
        <h>SnP/SnP-FBWL-default.h</h>
    </fragment>

    <!-- Keccak[r+c=1600] -->

    <fragment name="width1600">
        <h>SnP/KeccakF-1600/KeccakF-1600-interface.h</h>
    </fragment>

    <fragment name="reference1600" inherits="common width1600 FBWL-default">
        <c>SnP/KeccakF-1600/Reference/KeccakF-1600-reference.c</c>
        <c>Tests/displayIntermediateValues.c</c>
        <h>SnP/KeccakF-1600/Reference/KeccakF-reference.h</h>
        <h>SnP/KeccakF-1600/Reference/SnP-interface.h</h>
        <h>Tests/displayIntermediateValues.h</h>
        <define>KeccakReference</define>
        <gcc>-O</gcc>
    </fragment>

    <fragment name="reference32BI" inherits="width1600 FBWL-default">
        <c>SnP/KeccakF-1600/Reference/KeccakF-1600-reference32BI.c</c>
        <c>Tests/displayIntermediateValues.c</c>
        <h>SnP/KeccakF-1600/Reference/KeccakF-reference.h</h>
        <h>SnP/KeccakF-1600/Reference/SnP-interface.h</h>
        <h>Tests/displayIntermediateValues.h</h>
        <gcc>-O</gcc>
        <define>KeccakReference</define>
        <define>KeccakReference32BI</define>
    </fragment>

    <fragment name="optimized64" inherits="width1600 optimized timingSnP">
        <c>SnP/KeccakF-1600/Optimized64/KeccakF-1600-opt64.c</c>
        <h>SnP/KeccakF-1600/Optimized/KeccakF-1600-unrolling.macros</h>
        <h>SnP/KeccakF-1600/Optimized/KeccakF-1600-64.macros</h>
        <h>SnP/KeccakF-1600/Optimized64/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
        <gcc>-m64</gcc>
    </fragment>

    <fragment name="inplace32BI" inherits="width1600 optimized timingSnP FBWL-default">
        <c>SnP/KeccakF-1600/Inplace32BI/KeccakF-1600-inplace32BI.c</c>
        <h>SnP/KeccakF-1600/Inplace32BI/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <fragment name="compact64" inherits="width1600 optimized timingSnP FBWL-default">
        <c>SnP/KeccakF-1600/Compact64/KeccakF-1600-compact64.c</c>
        <h>SnP/KeccakF-1600/Compact64/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
        <gcc>-m64</gcc>
    </fragment>

    <fragment name="asmx86-64-common" inherits="width1600 optimized timingSnP FBWL-default">
        <h>SnP/KeccakF-1600/OptimizedAsmX86-64/SnP-interface.h</h>
        <gcc>-m64</gcc>
    </fragment>

    <fragment name="asmx86-64" inherits="asmx86-64-common">
        <c>SnP/KeccakF-1600/OptimizedAsmX86-64/KeccakF-1600-x86-64-gas.s</c>
    </fragment>

    <fragment name="asmx86-64-shld" inherits="asmx86-64-common">
        <c>SnP/KeccakF-1600/OptimizedAsmX86-64/KeccakF-1600-x86-64-shld-gas.s</c>
    </fragment>

    <fragment name="opt64u6" inherits="optimized64">
        <h>SnP/KeccakF-1600/Optimized64/u6/KeccakF-1600-opt64-settings.h</h>
    </fragment>

    <fragment name="opt64ufull" inherits="optimized64">
        <h>SnP/KeccakF-1600/Optimized64/ufull/KeccakF-1600-opt64-settings.h</h>
    </fragment>

    <fragment name="opt64lcu6" inherits="optimized64">
        <h>SnP/KeccakF-1600/Optimized64/LCu6/KeccakF-1600-opt64-settings.h</h>
    </fragment>

    <fragment name="opt64lcufull" inherits="optimized64">
        <h>SnP/KeccakF-1600/Optimized64/LCufull/KeccakF-1600-opt64-settings.h</h>
    </fragment>

    <fragment name="opt64lcufullshld" inherits="optimized64">
        <h>SnP/KeccakF-1600/Optimized64/LCufullshld/KeccakF-1600-opt64-settings.h</h>
    </fragment>

    <target name="sedachavx2" inherits="width1600 optimized">
        <c>SnP/KeccakF-1600/Sedach-AVX2/KeccakF-1600-AVX2.cpp</c>
        <h>SnP/KeccakF-1600/Sedach-AVX2/SnP-interface.h</h>
        <gcc>-O2</gcc>
    </target>

    <group all="KeccakWidth1600">
        <product delimiter="/">
            <factor set="KeccakTests KeccakSum"/>
            <factor set="reference1600 reference32BI inplace32BI compact64 asmx86-64 asmx86-64-shld opt64u6 opt64ufull opt64lcu6 opt64lcufull opt64lcufullshld"/> <!--  sedachavx2 -->
        </product>
    </group>

    <!-- Keccak[r+c=800] -->

    <fragment name="width800">
        <h>SnP/KeccakF-800/KeccakF-800-interface.h</h>
    </fragment>

    <fragment name="reference800" inherits="common width800 FBWL-default">
        <c>SnP/KeccakF-800/Reference/KeccakF-800-reference.c</c>
        <c>Tests/displayIntermediateValues.c</c>
        <h>SnP/KeccakF-800/Reference/KeccakF-reference.h</h>
        <h>SnP/KeccakF-800/Reference/SnP-interface.h</h>
        <h>Tests/displayIntermediateValues.h</h>
        <define>KeccakReference</define>
        <gcc>-O</gcc>
    </fragment>

    <fragment name="compact800" inherits="width800 optimized timingSnP FBWL-default">
        <c>SnP/KeccakF-800/Compact/KeccakF-800-compact.c</c>
        <h>SnP/KeccakF-800/Compact/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <group all="KeccakTestsWidth800">
        <product delimiter="/">
            <factor set="KeccakTests"/>
            <factor set="reference800 compact800"/>
        </product>
    </group>

    <!-- Keccak[r+c=400] -->

    <fragment name="width400">
        <h>SnP/KeccakF-400/KeccakF-400-interface.h</h>
    </fragment>

    <fragment name="reference400" inherits="common width400 FBWL-default">
        <c>SnP/KeccakF-400/Reference/KeccakF-400-reference.c</c>
        <c>Tests/displayIntermediateValues.c</c>
        <h>SnP/KeccakF-400/Reference/KeccakF-reference.h</h>
        <h>SnP/KeccakF-400/Reference/SnP-interface.h</h>
        <h>Tests/displayIntermediateValues.h</h>
        <define>KeccakReference</define>
        <gcc>-O</gcc>
    </fragment>

    <group all="KeccakTestsWidth400">
        <product delimiter="/">
            <factor set="KeccakTests"/>
            <factor set="reference400"/>
        </product>
    </group>

    <!-- Keccak[r+c=200] -->

    <fragment name="width200">
        <h>SnP/KeccakF-200/KeccakF-200-interface.h</h>
    </fragment>

    <fragment name="reference200" inherits="common width200 FBWL-default">
        <c>SnP/KeccakF-200/Reference/KeccakF-200-reference.c</c>
        <c>Tests/displayIntermediateValues.c</c>
        <h>SnP/KeccakF-200/Reference/KeccakF-reference.h</h>
        <h>SnP/KeccakF-200/Reference/SnP-interface.h</h>
        <h>Tests/displayIntermediateValues.h</h>
        <define>KeccakReference</define>
        <gcc>-O</gcc>
    </fragment>

    <fragment name="compact200" inherits="width200 optimized FBWL-default">
        <c>SnP/KeccakF-200/Compact/KeccakF-200-compact.c</c>
        <h>SnP/KeccakF-200/Compact/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <group all="KeccakTestsWidth200">
        <product delimiter="/">
            <factor set="KeccakTests"/>
            <factor set="reference200 compact200"/>
        </product>
    </group>

    <!-- Keyak -->

    <fragment name="crypto_aead_test">
        <h>CAESAR/test_crypto_aead.h</h>
        <c>CAESAR/test_crypto_aead.c</c>
    </fragment>

    <fragment name="keyak">
        <h>Modes/Keyakv2.h</h>
        <c>Modes/Keyakv2.c</c>
        <h>Modes/Motorist.h</h>
        <c>Modes/Motorist.c</c>
    </fragment>

    <fragment name="serial_keyak" inherits="common keyak P1">
    </fragment>

    <fragment name="parallel_keyak" inherits="common keyak">
    </fragment>

    <fragment name="serial_keyak_tests" inherits="serial_keyak timingSnP">
        <define>Keyak</define>
        <c>Tests/main.c</c>
        <h>Tests/testKeyakv2.h</h>
        <c>Tests/testKeyakv2.c</c>
        <h>Tests/testMotorist.h</h>
        <c>Tests/testMotorist.c</c>
        <h>Tests/testSnP.h</h>
        <c>Tests/testSnP.c</c>
    </fragment>

    <fragment name="parallel_keyak_tests" inherits="parallel_keyak">
        <define>Keyak</define>
        <c>Tests/main.c</c>
        <h>Tests/testKeyakv2.h</h>
        <c>Tests/testKeyakv2.c</c>
        <h>Tests/testMotorist.h</h>
        <c>Tests/testMotorist.c</c>
        <h>Tests/testPlSnP.h</h>
        <c>Tests/testPlSnP.c</c>
        <c>Tests/timingPlSnP.c</c>
        <h>Tests/timing.h</h>
        <h>Tests/timingPlSnP.h</h>
    </fragment>

    <fragment name="width800rounds12">
        <h>SnP/KeccakP-800-12/KeccakP-800-12-interface.h</h>
        <h>SnP/KeccakF-800/KeccakF-800-interface.h</h>
    </fragment>

    <fragment name="width1600rounds12">
        <h>SnP/KeccakP-1600-12/KeccakP-1600-12-interface.h</h>
        <h>SnP/KeccakF-1600/KeccakF-1600-interface.h</h>
    </fragment>

    <fragment name="P1">
        <h>PlSnP/None/NumberOfParallelInstances.h</h>
    </fragment>

    <fragment name="P2">
        <h>PlSnP/2/NumberOfParallelInstances.h</h>
    </fragment>

    <fragment name="P4">
        <h>PlSnP/4/NumberOfParallelInstances.h</h>
    </fragment>

    <fragment name="P8">
        <h>PlSnP/8/NumberOfParallelInstances.h</h>
    </fragment>

    <!-- River Keyak -->

    <fragment name="width800rounds12_reference" inherits="common width800rounds12 FBWL-default">
        <c>Tests/displayIntermediateValues.c</c>
        <h>Tests/displayIntermediateValues.h</h>
        <c>SnP/KeccakF-800/Reference/KeccakF-800-reference.c</c>
        <c>SnP/KeccakP-800-12/Reference/KeccakP-800-12-reference.c</c>
        <h>SnP/KeccakP-800-12/Reference/SnP-interface.h</h>
        <define>KeyakReference</define>
    </fragment>

    <fragment name="caesar_river_keyak">
        <c>CAESAR/RiverKeyak/encrypt.c</c>
        <h>CAESAR/RiverKeyak/api.h</h>
    </fragment>

    <fragment name="caesar_river_keyak_test" inherits="caesar_river_keyak crypto_aead_test">
        <c>CAESAR/RiverKeyak/selftest.c</c>
    </fragment>

    <target name="RiverKeyakReference" inherits="serial_keyak_tests width800rounds12_reference"/>

    <fragment name="RiverKeyakReferenceCAESAR" inherits="caesar_river_keyak serial_keyak width800rounds12_reference"/>

    <target name="crypto_aead/riverkeyakv2/ref" inherits="RiverKeyakReferenceCAESAR"/>

    <target name="RiverKeyakReferenceCAESARTest" inherits="RiverKeyakReferenceCAESAR crypto_aead_test">
        <c>CAESAR/RiverKeyak/selftest.c</c>
    </target>

    <!-- River Keyak optimized in C -->

    <fragment name="width800rounds12_optimized" inherits="common width800rounds12 optimized">
        <h>SnP/KeccakP-800-12/Optimized32/KeccakP-800-12-32-bis.macros</h>
        <h>SnP/KeccakP-800-12/Optimized32/KeccakP-800-12-32.macros</h>
        <c>SnP/KeccakP-800-12/Optimized32/KeccakP-800-12-optimized32.c</c>
        <h>SnP/KeccakP-800-12/Optimized32/KeccakP-800-12-unrolling-bis.macros</h>
        <h>SnP/KeccakP-800-12/Optimized32/KeccakP-800-12-unrolling.macros</h>
        <h>SnP/KeccakP-800-12/Optimized32/SnP-interface.h</h>
    </fragment>

    <fragment name="RiverKeyakOpt32u2" inherits="serial_keyak width800rounds12_optimized">
        <h>SnP/KeccakP-800-12/Optimized32/u2/KeccakP-800-12-optimized32-settings.h</h>
    </fragment>
    <fragment name="RiverKeyakOpt32ufull" inherits="serial_keyak width800rounds12_optimized">
        <h>SnP/KeccakP-800-12/Optimized32/ufull/KeccakP-800-12-optimized32-settings.h</h>
    </fragment>
    <fragment name="RiverKeyakOpt32LCu2" inherits="serial_keyak width800rounds12_optimized">
        <h>SnP/KeccakP-800-12/Optimized32/LCu2/KeccakP-800-12-optimized32-settings.h</h>
    </fragment>
    <fragment name="RiverKeyakOpt32LCufull" inherits="serial_keyak width800rounds12_optimized">
        <h>SnP/KeccakP-800-12/Optimized32/LCufull/KeccakP-800-12-optimized32-settings.h</h>
    </fragment>

    <target name="RiverKeyakOpt32u2Test" inherits="RiverKeyakOpt32u2 serial_keyak_tests"/>
    <target name="RiverKeyakOpt32ufullTest" inherits="RiverKeyakOpt32ufull serial_keyak_tests"/>
    <target name="RiverKeyakOpt32LCu2Test" inherits="RiverKeyakOpt32LCu2 serial_keyak_tests"/>
    <target name="RiverKeyakOpt32LCufullTest" inherits="RiverKeyakOpt32LCufull serial_keyak_tests"/>

    <target name="crypto_aead/riverkeyakv2/opt32u2" inherits="RiverKeyakOpt32u2 caesar_river_keyak"/>
    <target name="crypto_aead/riverkeyakv2/opt32ufull" inherits="RiverKeyakOpt32ufull caesar_river_keyak"/>
    <target name="crypto_aead/riverkeyakv2/opt32LCu2" inherits="RiverKeyakOpt32LCu2 caesar_river_keyak"/>
    <target name="crypto_aead/riverkeyakv2/opt32LCufull" inherits="RiverKeyakOpt32LCufull caesar_river_keyak"/>
    <target name="RiverKeyakOpt32LCufullCAESARTest" inherits="crypto_aead/riverkeyakv2/opt32LCufull caesar_river_keyak_test"/>

    <fragment name="RiverKeyakCompact" inherits="serial_keyak common width800rounds12 optimized FBWL-default">
            <c>SnP/KeccakP-800-12/Compact/KeccakP-800-12-compact.c</c>
            <h>SnP/KeccakP-800-12/Compact/SnP-interface.h</h>
            <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <target name="RiverKeyakCompactTest" inherits="RiverKeyakCompact serial_keyak_tests"/>

    <target name="crypto_aead/riverkeyakv2/compact" inherits="RiverKeyakCompact caesar_river_keyak"/>
    <target name="RiverKeyakCompactCAESARTest" inherits="crypto_aead/riverkeyakv2/compact caesar_river_keyak_test"/>

    <!-- River Keyak optimized in ARM assembly -->

    <fragment name="width800rounds12_ARM-common" inherits="width800rounds12 optimized">
        <h>SnP/KeccakP-800-12/OptimizedAsmARM/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

   <fragment name="RiverKeyakAsmARMv6M" inherits="serial_keyak width800rounds12_ARM-common">
        <c>SnP/KeccakP-800-12/OptimizedAsmARM/KeccakP-800-12-armv6m-le-gcc.s</c>
    </fragment>
    <fragment name="RiverKeyakAsmARMv7M" inherits="serial_keyak width800rounds12_ARM-common">
        <c>SnP/KeccakP-800-12/OptimizedAsmARM/KeccakP-800-12-armv7m-le-gcc.s</c>
    </fragment>
    <fragment name="RiverKeyakAsmARMv7A" inherits="serial_keyak width800rounds12_ARM-common">
        <c>SnP/KeccakP-800-12/OptimizedAsmARM/KeccakP-800-12-armv7a-le-gcc.s</c>
    </fragment>

    <target name="RiverKeyakAsmARMv6MTest" inherits="RiverKeyakAsmARMv6M serial_keyak_tests"/>
    <target name="RiverKeyakAsmARMv7MTest" inherits="RiverKeyakAsmARMv7M serial_keyak_tests"/>
    <target name="RiverKeyakAsmARMv7ATest" inherits="RiverKeyakAsmARMv7A serial_keyak_tests"/>

    <target name="crypto_aead/riverkeyakv2/asmarmv6m" inherits="RiverKeyakAsmARMv6M caesar_river_keyak"/>
    <target name="crypto_aead/riverkeyakv2/asmarmv7m" inherits="RiverKeyakAsmARMv7M caesar_river_keyak"/>
    <target name="crypto_aead/riverkeyakv2/asmarmv7a" inherits="RiverKeyakAsmARMv7A caesar_river_keyak"/>
    <target name="RiverKeyakAsmARMv7ATestCAESARTest" inherits="crypto_aead/riverkeyakv2/asmarmv7a caesar_river_keyak_test"/>

    <!-- Lake Keyak -->

    <fragment name="width1600rounds12_reference" inherits="common width1600rounds12 FBWL-default">
        <c>Tests/displayIntermediateValues.c</c>
        <h>Tests/displayIntermediateValues.h</h>
        <c>SnP/KeccakF-1600/Reference/KeccakF-1600-reference.c</c>
        <c>SnP/KeccakP-1600-12/Reference/KeccakP-1600-12-reference.c</c>
        <h>SnP/KeccakP-1600-12/Reference/SnP-interface.h</h>
        <define>KeyakReference</define>
    </fragment>

    <fragment name="caesar_lake_keyak">
        <c>CAESAR/LakeKeyak/encrypt.c</c>
        <h>CAESAR/LakeKeyak/api.h</h>
    </fragment>

    <fragment name="caesar_lake_keyak_test" inherits="caesar_lake_keyak crypto_aead_test">
        <c>CAESAR/LakeKeyak/selftest.c</c>
    </fragment>

    <target name="LakeKeyakReference" inherits="serial_keyak_tests width1600rounds12_reference"/>

    <fragment name="LakeKeyakReferenceCAESAR" inherits="caesar_lake_keyak serial_keyak width1600rounds12_reference"/>
    <target name="crypto_aead/lakekeyakv2/ref" inherits="LakeKeyakReferenceCAESAR"/>
    <target name="LakeKeyakReferenceCAESARTest" inherits="LakeKeyakReferenceCAESAR caesar_lake_keyak_test"/>

    <!-- Lake Keyak optimized in C (64 bits) -->

    <fragment name="width1600rounds12_optimized64" inherits="common width1600rounds12 optimized">
        <c>SnP/KeccakF-1600/Optimized64/KeccakF-1600-opt64.c</c>
        <h>SnP/KeccakF-1600/Optimized/KeccakF-1600-unrolling.macros</h>
        <h>SnP/KeccakF-1600/Optimized/KeccakF-1600-64.macros</h>
        <c>SnP/KeccakP-1600-12/Optimized64/KeccakP-1600-12-opt64.c</c>
        <h>SnP/KeccakP-1600-12/Optimized64/KeccakP-1600-12-unrolling.macros</h>
        <h>SnP/KeccakP-1600-12/Optimized64/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
        <gcc>-m64</gcc>
    </fragment>

    <fragment name="LakeKeyakOpt64u6" inherits="serial_keyak width1600rounds12_optimized64">
        <h>SnP/KeccakF-1600/Optimized64/u6/KeccakF-1600-opt64-settings.h</h>
    </fragment>
    <fragment name="LakeKeyakOpt64ufull" inherits="serial_keyak width1600rounds12_optimized64">
        <h>SnP/KeccakF-1600/Optimized64/ufull/KeccakF-1600-opt64-settings.h</h>
    </fragment>
    <fragment name="LakeKeyakOpt64LCu6" inherits="serial_keyak width1600rounds12_optimized64">
        <h>SnP/KeccakF-1600/Optimized64/LCu6/KeccakF-1600-opt64-settings.h</h>
    </fragment>
    <fragment name="LakeKeyakOpt64LCufull" inherits="serial_keyak width1600rounds12_optimized64">
        <h>SnP/KeccakF-1600/Optimized64/LCufull/KeccakF-1600-opt64-settings.h</h>
    </fragment>
    <fragment name="LakeKeyakOpt64LCufullshld" inherits="serial_keyak width1600rounds12_optimized64">
        <h>SnP/KeccakF-1600/Optimized64/LCufullshld/KeccakF-1600-opt64-settings.h</h>
    </fragment>

    <fragment name="LakeKeyakCompact64" inherits="serial_keyak common width1600rounds12 optimized FBWL-default">
        <c>SnP/KeccakF-1600/Compact64/KeccakF-1600-compact64.c</c>
        <c>SnP/KeccakP-1600-12/Compact64/KeccakP-1600-12-compact64.c</c>
        <h>SnP/KeccakP-1600-12/Compact64/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
        <gcc>-m64</gcc>
    </fragment>

    <target name="LakeKeyakOpt64u6Test" inherits="LakeKeyakOpt64u6 serial_keyak_tests"/>
    <target name="LakeKeyakOpt64ufullTest" inherits="LakeKeyakOpt64ufull serial_keyak_tests"/>
    <target name="LakeKeyakOpt64LCu6Test" inherits="LakeKeyakOpt64LCu6 serial_keyak_tests"/>
    <target name="LakeKeyakOpt64LCufullTest" inherits="LakeKeyakOpt64LCufull serial_keyak_tests"/>
    <target name="LakeKeyakOpt64LCufullshldTest" inherits="LakeKeyakOpt64LCufullshld serial_keyak_tests"/>
    <target name="LakeKeyakCompact64Test" inherits="LakeKeyakCompact64 serial_keyak_tests"/>

    <target name="crypto_aead/lakekeyakv2/opt64u6" inherits="LakeKeyakOpt64u6 caesar_lake_keyak"/>
    <target name="LakeKeyakOpt64u6CAESARTest" inherits="crypto_aead/lakekeyakv2/opt64u6 caesar_lake_keyak_test"/>
    <target name="crypto_aead/lakekeyakv2/opt64ufull" inherits="LakeKeyakOpt64ufull caesar_lake_keyak"/>
    <target name="crypto_aead/lakekeyakv2/opt64lcu6" inherits="LakeKeyakOpt64LCu6 caesar_lake_keyak"/>
    <target name="crypto_aead/lakekeyakv2/opt64lcufull" inherits="LakeKeyakOpt64LCufull caesar_lake_keyak"/>
    <target name="crypto_aead/lakekeyakv2/opt64lcufullshld" inherits="LakeKeyakOpt64LCufullshld caesar_lake_keyak"/>
    <target name="crypto_aead/lakekeyakv2/compact64" inherits="LakeKeyakCompact64 caesar_lake_keyak"/>
    <target name="LakeKeyakCompact64CAESARTest" inherits="crypto_aead/lakekeyakv2/compact64 caesar_lake_keyak_test"/>

    <!-- Lake Keyak optimized in C (32 bits) -->

    <fragment name="LakeKeyakInplace32BI" inherits="serial_keyak common width1600rounds12 optimized FBWL-default">
        <c>SnP/KeccakF-1600/Inplace32BI/KeccakF-1600-inplace32BI.c</c>
        <c>SnP/KeccakP-1600-12/Inplace32BI/KeccakP-1600-12-inplace32BI.c</c>
        <h>SnP/KeccakP-1600-12/Inplace32BI/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <target name="LakeKeyakInplace32BITest" inherits="LakeKeyakInplace32BI serial_keyak_tests"/>
    <target name="crypto_aead/lakekeyakv2/inplace32bi" inherits="LakeKeyakInplace32BI caesar_lake_keyak"/>
    <target name="LakeKeyakInplace32BICAESARTest" inherits="crypto_aead/lakekeyakv2/inplace32bi caesar_lake_keyak_test"/>

    <!-- Lake Keyak optimized in x86_64 assembly -->

    <fragment name="width1600rounds12_asmx86-64-common" inherits="width1600rounds12 optimized FBWL-default">
        <h>SnP/KeccakP-1600-12/OptimizedAsmX86-64/SnP-interface.h</h>
        <gcc>-m64</gcc>
    </fragment>
    <fragment name="LakeKeyakAsmx86-64" inherits="serial_keyak width1600rounds12_asmx86-64-common">
        <c>SnP/KeccakP-1600-12/OptimizedAsmX86-64/KeccakP-1600-12-x86-64-gas.s</c>
    </fragment>
    <fragment name="LakeKeyakAsmx86-64-shld" inherits="serial_keyak width1600rounds12_asmx86-64-common">
        <c>SnP/KeccakP-1600-12/OptimizedAsmX86-64/KeccakP-1600-12-x86-64-shld-gas.s</c>
    </fragment>

    <target name="LakeKeyakAsmx86-64Test" inherits="LakeKeyakAsmx86-64 serial_keyak_tests"/>
    <target name="LakeKeyakAsmx86-64-shldTest" inherits="LakeKeyakAsmx86-64-shld serial_keyak_tests"/>

    <target name="crypto_aead/lakekeyakv2/asmx86-64" inherits="LakeKeyakAsmx86-64 caesar_lake_keyak"/>
    <target name="LakeKeyakAsmx86-64CAESARTest" inherits="crypto_aead/lakekeyakv2/asmx86-64 caesar_lake_keyak_test"/>
    <target name="crypto_aead/lakekeyakv2/asmx86-64-shld" inherits="LakeKeyakAsmx86-64-shld caesar_lake_keyak"/>

    <!-- Lake Keyak optimized in ARM assembly -->

    <fragment name="width1600rounds12_inplace32bi_ARM-common" inherits="width1600rounds12 optimized">
        <h>SnP/KeccakP-1600-12/Optimized32biAsmARM/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>
    <fragment name="LakeKeyakAsmARMv6M" inherits="serial_keyak width1600rounds12_inplace32bi_ARM-common">
        <c>SnP/KeccakP-1600-12/Optimized32biAsmARM/KeccakP-1600-12-inplace-32bi-armv6m-le-gcc.s</c>
    </fragment>
    <fragment name="LakeKeyakAsmARMv7M" inherits="serial_keyak width1600rounds12_inplace32bi_ARM-common">
        <c>SnP/KeccakP-1600-12/Optimized32biAsmARM/KeccakP-1600-12-inplace-32bi-armv7m-le-gcc.s</c>
    </fragment>
    <fragment name="LakeKeyakAsmARMv7A" inherits="serial_keyak width1600rounds12_inplace32bi_ARM-common">
        <c>SnP/KeccakP-1600-12/Optimized32biAsmARM/KeccakP-1600-12-inplace-32bi-armv7a-le-gcc.s</c>
    </fragment>
    <fragment name="LakeKeyakAsmARMv7A-NEON" inherits="serial_keyak width1600rounds12 optimized">
        <c>SnP/KeccakP-1600-12/OptimizedAsmARM/KeccakP-1600-12-armv7a-le-neon-gcc.s</c>
        <h>SnP/KeccakP-1600-12/OptimizedAsmARM/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <target name="LakeKeyakAsmARMv6MTest" inherits="LakeKeyakAsmARMv6M serial_keyak_tests"/>
    <target name="LakeKeyakAsmARMv7MTest" inherits="LakeKeyakAsmARMv7M serial_keyak_tests"/>
    <target name="LakeKeyakAsmARMv7ATest" inherits="LakeKeyakAsmARMv7A serial_keyak_tests"/>
    <target name="LakeKeyakAsmARMv7A-NEONTest" inherits="LakeKeyakAsmARMv7A-NEON serial_keyak_tests"/>

    <target name="crypto_aead/lakekeyakv2/asmarmv6m" inherits="LakeKeyakAsmARMv6M caesar_lake_keyak"/>
    <target name="crypto_aead/lakekeyakv2/asmarmv7m" inherits="LakeKeyakAsmARMv7M caesar_lake_keyak"/>
    <target name="crypto_aead/lakekeyakv2/asmarmv7a" inherits="LakeKeyakAsmARMv7A caesar_lake_keyak"/>
    <target name="crypto_aead/lakekeyakv2/asmarmv7aneon" inherits="LakeKeyakAsmARMv7A-NEON caesar_lake_keyak"/>
    <target name="LakeKeyakAsmARMv7ACAESARTest" inherits="crypto_aead/lakekeyakv2/asmarmv7a caesar_lake_keyak_test"/>
    <target name="LakeKeyakAsmARMv7A-NEONCAESARTest" inherits="crypto_aead/lakekeyakv2/asmarmv7aneon caesar_lake_keyak_test"/>

    <!-- Sea Keyak -->

    <fragment name="serial_fallback">
        <c>PlSnP/SerialFallback/SerialFallback.c</c>
        <h>PlSnP/SerialFallback/PlSnP-interface.h</h>
        <c>PlSnP/PlSnP-FBWL-default.c</c>
        <h>PlSnP/PlSnP-FBWL-default.h</h>
    </fragment>

    <fragment name="caesar_sea_keyak">
        <c>CAESAR/SeaKeyak/encrypt.c</c>
        <h>CAESAR/SeaKeyak/api.h</h>
    </fragment>

    <fragment name="caesar_sea_keyak_test" inherits="caesar_sea_keyak crypto_aead_test">
        <c>CAESAR/SeaKeyak/selftest.c</c>
    </fragment>

    <fragment name="reference_sea" inherits="width1600rounds12_reference serial_fallback P2"/>

    <target name="SeaKeyakReference" inherits="parallel_keyak_tests reference_sea"/>

    <fragment name="SeaKeyakReferenceCAESAR" inherits="caesar_sea_keyak parallel_keyak reference_sea"/>

    <target name="crypto_aead/seakeyakv2/ref" inherits="SeaKeyakReferenceCAESAR"/>

    <target name="SeaKeyakReferenceCAESARTest" inherits="SeaKeyakReferenceCAESAR crypto_aead_test">
        <c>CAESAR/SeaKeyak/selftest.c</c>
    </target>

    <!-- Sea Keyak using SIMD128 -->

    <fragment name="width1600rounds12p2_SIMD128-common" inherits="optimized">
        <h>PlSnP/KeccakP-1600-12/2/Native/PlSnP-interface.h</h>
        <c>PlSnP/KeccakP-1600-12/SIMD128/DoubleKeccakP-1600-12.c</c>
        <h>PlSnP/KeccakP-1600-12/SIMD128/KeccakP-1600-12-unrolling.macros</h>
        <h>PlSnP/KeccakP-1600-12/SIMD128/Lane-config.h</h>
        <h>PlSnP/KeccakP-1600-12/SIMD128/SnP-interface.h</h>
        <c>PlSnP/PlSnP-FBWL-default.c</c>
        <h>PlSnP/PlSnP-FBWL-default.h</h>
    </fragment>
    <fragment name="SeaKeyakSSE2u2" inherits="parallel_keyak P2 width1600rounds12p2_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/SSE2u2/SIMD128-config.h</h>
    </fragment>
    <fragment name="SeaKeyakSSE2ufull" inherits="parallel_keyak P2 width1600rounds12p2_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/SSE2ufull/SIMD128-config.h</h>
    </fragment>
    <fragment name="SeaKeyakXOPu2" inherits="parallel_keyak P2 width1600rounds12p2_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/XOPu2/SIMD128-config.h</h>
    </fragment>
    <fragment name="SeaKeyakXOPufull" inherits="parallel_keyak P2 width1600rounds12p2_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/XOPufull/SIMD128-config.h</h>
    </fragment>

    <target name="SeaKeyakSSE2u2Test" inherits="SeaKeyakSSE2u2 parallel_keyak_tests"/>
    <target name="SeaKeyakSSE2ufullTest" inherits="SeaKeyakSSE2ufull parallel_keyak_tests"/>
    <target name="SeaKeyakXOPu2Test" inherits="SeaKeyakXOPu2 parallel_keyak_tests"/>
    <target name="SeaKeyakXOPufullTest" inherits="SeaKeyakXOPufull parallel_keyak_tests"/>

    <target name="crypto_aead/seakeyakv2/sse2u2" inherits="SeaKeyakSSE2u2 caesar_sea_keyak"/>
    <target name="crypto_aead/seakeyakv2/sse2ufull" inherits="SeaKeyakSSE2ufull caesar_sea_keyak"/>
    <target name="SeaKeyakSSE2ufullCAESARTest" inherits="crypto_aead/seakeyakv2/sse2ufull caesar_sea_keyak_test"/>
    <target name="crypto_aead/seakeyakv2/xopu2" inherits="SeaKeyakXOPu2 caesar_sea_keyak"/>
    <target name="crypto_aead/seakeyakv2/xopufull" inherits="SeaKeyakXOPufull caesar_sea_keyak"/>

    <!-- Sea Keyak optimized in C (64 bits) -->

    <fragment name="SeaKeyakOpt64u6" inherits="parallel_keyak P2 width1600rounds12_optimized64 serial_fallback">
        <h>SnP/KeccakF-1600/Optimized64/u6/KeccakF-1600-opt64-settings.h</h>
    </fragment>
    <fragment name="SeaKeyakOpt64ufull" inherits="parallel_keyak P2 width1600rounds12_optimized64 serial_fallback">
        <h>SnP/KeccakF-1600/Optimized64/ufull/KeccakF-1600-opt64-settings.h</h>
    </fragment>
    <fragment name="SeaKeyakOpt64LCu6" inherits="parallel_keyak P2 width1600rounds12_optimized64 serial_fallback">
        <h>SnP/KeccakF-1600/Optimized64/LCu6/KeccakF-1600-opt64-settings.h</h>
    </fragment>
    <fragment name="SeaKeyakOpt64LCufull" inherits="parallel_keyak P2 width1600rounds12_optimized64 serial_fallback">
        <h>SnP/KeccakF-1600/Optimized64/LCufull/KeccakF-1600-opt64-settings.h</h>
    </fragment>
    <fragment name="SeaKeyakOpt64LCufullshld" inherits="parallel_keyak P2 width1600rounds12_optimized64 serial_fallback">
        <h>SnP/KeccakF-1600/Optimized64/LCufullshld/KeccakF-1600-opt64-settings.h</h>
    </fragment>
    <fragment name="SeaKeyakCompact64" inherits="parallel_keyak P2 common width1600rounds12 optimized serial_fallback FBWL-default">
        <c>SnP/KeccakF-1600/Compact64/KeccakF-1600-compact64.c</c>
        <c>SnP/KeccakP-1600-12/Compact64/KeccakP-1600-12-compact64.c</c>
        <h>SnP/KeccakP-1600-12/Compact64/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
        <gcc>-m64</gcc>
    </fragment>

    <target name="SeaKeyakOpt64u6Test" inherits="SeaKeyakOpt64u6 parallel_keyak_tests"/>
    <target name="SeaKeyakOpt64ufullTest" inherits="SeaKeyakOpt64ufull parallel_keyak_tests"/>
    <target name="SeaKeyakOpt64LCu6Test" inherits="SeaKeyakOpt64LCu6 parallel_keyak_tests"/>
    <target name="SeaKeyakOpt64LCufullTest" inherits="SeaKeyakOpt64LCufull parallel_keyak_tests"/>
    <target name="SeaKeyakOpt64LCufullshldTest" inherits="SeaKeyakOpt64LCufullshld parallel_keyak_tests"/>
    <target name="SeaKeyakCompact64Test" inherits="SeaKeyakCompact64 parallel_keyak_tests"/>

    <target name="crypto_aead/seakeyakv2/opt64u6" inherits="SeaKeyakOpt64u6 caesar_sea_keyak"/>
    <target name="SeaKeyakOpt64u6CAESARTest" inherits="crypto_aead/seakeyakv2/opt64u6 caesar_sea_keyak_test"/>
    <target name="crypto_aead/seakeyakv2/opt64ufull" inherits="SeaKeyakOpt64ufull caesar_sea_keyak"/>
    <target name="crypto_aead/seakeyakv2/opt64lcu6" inherits="SeaKeyakOpt64LCu6 caesar_sea_keyak"/>
    <target name="crypto_aead/seakeyakv2/opt64lcufull" inherits="SeaKeyakOpt64LCufull caesar_sea_keyak"/>
    <target name="crypto_aead/seakeyakv2/opt64lcufullshld" inherits="SeaKeyakOpt64LCufullshld caesar_sea_keyak"/>
    <target name="crypto_aead/seakeyakv2/compact64" inherits="SeaKeyakCompact64 caesar_sea_keyak"/>
    <target name="SeaKeyakCompact64CAESARTest" inherits="crypto_aead/seakeyakv2/compact64 caesar_sea_keyak_test"/>

    <!-- Sea Keyak optimized in C (32 bits) -->

    <fragment name="SeaKeyakInplace32BI" inherits="parallel_keyak P2 common width1600rounds12 optimized serial_fallback FBWL-default">
        <c>SnP/KeccakF-1600/Inplace32BI/KeccakF-1600-inplace32BI.c</c>
        <c>SnP/KeccakP-1600-12/Inplace32BI/KeccakP-1600-12-inplace32BI.c</c>
        <h>SnP/KeccakP-1600-12/Inplace32BI/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <target name="SeaKeyakInplace32BITest" inherits="SeaKeyakInplace32BI parallel_keyak_tests"/>
    <target name="crypto_aead/seakeyakv2/inplace32bi" inherits="SeaKeyakInplace32BI caesar_sea_keyak"/>
    <target name="SeaKeyakInplace32BICAESARTest" inherits="crypto_aead/seakeyakv2/inplace32bi caesar_sea_keyak_test"/>

    <!-- Sea Keyak optimized in x86_64 assembly -->

    <fragment name="SeaKeyakAsmx86-64" inherits="parallel_keyak P2 width1600rounds12_asmx86-64-common serial_fallback">
        <c>SnP/KeccakP-1600-12/OptimizedAsmX86-64/KeccakP-1600-12-x86-64-gas.s</c>
    </fragment>
    <fragment name="SeaKeyakAsmx86-64-shld" inherits="parallel_keyak P2 width1600rounds12_asmx86-64-common serial_fallback">
        <c>SnP/KeccakP-1600-12/OptimizedAsmX86-64/KeccakP-1600-12-x86-64-shld-gas.s</c>
    </fragment>

    <target name="SeaKeyakAsmx86-64Test" inherits="SeaKeyakAsmx86-64 parallel_keyak_tests"/>
    <target name="SeaKeyakAsmx86-64-shldTest" inherits="SeaKeyakAsmx86-64-shld parallel_keyak_tests"/>

    <target name="crypto_aead/seakeyakv2/asmx86-64" inherits="SeaKeyakAsmx86-64 caesar_sea_keyak"/>
    <target name="SeaKeyakAsmx86-64CAESARTest" inherits="crypto_aead/seakeyakv2/asmx86-64 caesar_sea_keyak_test"/>
    <target name="crypto_aead/seakeyakv2/asmx86-64-shld" inherits="SeaKeyakAsmx86-64-shld caesar_sea_keyak"/>

    <!-- Sea Keyak optimized in ARM assembly -->

    <fragment name="SeaKeyakAsmARMv6M" inherits="parallel_keyak P2 width1600rounds12_inplace32bi_ARM-common serial_fallback">
        <c>SnP/KeccakP-1600-12/Optimized32biAsmARM/KeccakP-1600-12-inplace-32bi-armv6m-le-gcc.s</c>
    </fragment>
    <fragment name="SeaKeyakAsmARMv7M" inherits="parallel_keyak P2 width1600rounds12_inplace32bi_ARM-common serial_fallback">
        <c>SnP/KeccakP-1600-12/Optimized32biAsmARM/KeccakP-1600-12-inplace-32bi-armv7m-le-gcc.s</c>
    </fragment>
    <fragment name="SeaKeyakAsmARMv7A" inherits="parallel_keyak P2 width1600rounds12_inplace32bi_ARM-common serial_fallback">
        <c>SnP/KeccakP-1600-12/Optimized32biAsmARM/KeccakP-1600-12-inplace-32bi-armv7a-le-gcc.s</c>
    </fragment>
    <fragment name="SeaKeyakAsmARMv7A-NEON" inherits="parallel_keyak P2 width1600rounds12 optimized serial_fallback">
        <c>SnP/KeccakP-1600-12/OptimizedAsmARM/KeccakP-1600-12-armv7a-le-neon-gcc.s</c>
        <h>SnP/KeccakP-1600-12/OptimizedAsmARM/SnP-interface.h</h>
        <h>SnP/SnP-Relaned.h</h>
    </fragment>

    <target name="SeaKeyakAsmARMv6MTest" inherits="SeaKeyakAsmARMv6M parallel_keyak_tests"/>
    <target name="SeaKeyakAsmARMv7MTest" inherits="SeaKeyakAsmARMv7M parallel_keyak_tests"/>
    <target name="SeaKeyakAsmARMv7ATest" inherits="SeaKeyakAsmARMv7A parallel_keyak_tests"/>
    <target name="SeaKeyakAsmARMv7A-NEONTest" inherits="SeaKeyakAsmARMv7A-NEON parallel_keyak_tests"/>

    <target name="crypto_aead/seakeyakv2/asmarmv6m" inherits="SeaKeyakAsmARMv6M caesar_sea_keyak"/>
    <target name="crypto_aead/seakeyakv2/asmarmv7m" inherits="SeaKeyakAsmARMv7M caesar_sea_keyak"/>
    <target name="crypto_aead/seakeyakv2/asmarmv7a" inherits="SeaKeyakAsmARMv7A caesar_sea_keyak"/>
    <target name="crypto_aead/seakeyakv2/asmarmv7aneon" inherits="SeaKeyakAsmARMv7A-NEON caesar_sea_keyak"/>
    <target name="SeaKeyakAsmARMv7ACAESARTest" inherits="crypto_aead/seakeyakv2/asmarmv7a caesar_sea_keyak_test"/>
    <target name="SeaKeyakAsmARMv7A-NEONCAESARTest" inherits="crypto_aead/seakeyakv2/asmarmv7aneon caesar_sea_keyak_test"/>

    <!-- Ocean Keyak -->

    <fragment name="caesar_ocean_keyak">
        <c>CAESAR/OceanKeyak/encrypt.c</c>
        <h>CAESAR/OceanKeyak/api.h</h>
    </fragment>

    <fragment name="caesar_ocean_keyak_test" inherits="caesar_ocean_keyak crypto_aead_test">
        <c>CAESAR/OceanKeyak/selftest.c</c>
    </fragment>

    <fragment name="reference_ocean" inherits="width1600rounds12_reference serial_fallback P4" />

    <target name="OceanKeyakReference" inherits="parallel_keyak_tests reference_ocean"/>

    <fragment name="OceanKeyakReferenceCAESAR" inherits="caesar_ocean_keyak parallel_keyak reference_ocean"/>

    <target name="crypto_aead/oceankeyakv2/ref" inherits="OceanKeyakReferenceCAESAR"/>
    <target name="OceanKeyakReferenceCAESARTest" inherits="OceanKeyakReferenceCAESAR caesar_ocean_keyak_test"/>

    <fragment name="width1600rounds12p4_SIMD256" inherits="P4 optimized">
        <h>PlSnP/KeccakP-1600-12/4/Native/PlSnP-interface.h</h>
        <c>PlSnP/KeccakP-1600-12/AVX2/QuadKeccakP-1600-12.c</c>
        <h>PlSnP/KeccakP-1600-12/AVX2/KeccakP-1600-12-unrolling.macros</h>
        <h>PlSnP/KeccakP-1600-12/AVX2/Lane-config.h</h>
        <h>PlSnP/KeccakP-1600-12/AVX2/SIMD-config.h</h>
        <h>PlSnP/KeccakP-1600-12/AVX2/SnP-interface.h</h>
        <c>PlSnP/PlSnP-FBWL-default.c</c>
        <h>PlSnP/PlSnP-FBWL-default.h</h>
    </fragment>

    <target name="OceanKeyakSIMD256Test" inherits="width1600rounds12p4_SIMD256 parallel_keyak_tests"/>

    <fragment name="OceanKeyakAVX2CAESAR" inherits="caesar_ocean_keyak parallel_keyak width1600rounds12p4_SIMD256 "/>
    <target name="crypto_aead/oceankeyakv2/avx2" inherits="OceanKeyakAVX2CAESAR"/>
    <target name="OceanKeyakAVX2CAESARTest" inherits="OceanKeyakAVX2CAESAR caesar_ocean_keyak_test"/>

    <!-- Ocean Keyak using SIMD-128 -->

    <fragment name="width1600rounds12p4_SIMD128-common" inherits="P4 optimized">
        <h>PlSnP/KeccakP-1600-12/4/Multi128/PlSnP-interface.h</h>
        <c>PlSnP/KeccakP-1600-12/MultiSIMD/MultiKeccakP-1600-12.c</c>
        <c>PlSnP/KeccakP-1600-12/SIMD128/DoubleKeccakP-1600-12.c</c>
        <h>PlSnP/KeccakP-1600-12/SIMD128/KeccakP-1600-12-unrolling.macros</h>
        <h>PlSnP/KeccakP-1600-12/SIMD128/Lane-config.h</h>
        <h>PlSnP/KeccakP-1600-12/SIMD128/SnP-interface.h</h>
        <c>PlSnP/PlSnP-FBWL-default.c</c>
        <h>PlSnP/PlSnP-FBWL-default.h</h>
    </fragment>
    
    <fragment name="OceanKeyakSSE2u2" inherits="parallel_keyak width1600rounds12p4_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/SSE2u2/SIMD128-config.h</h>
    </fragment>
    <fragment name="OceanKeyakSSE2ufull" inherits="parallel_keyak width1600rounds12p4_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/SSE2ufull/SIMD128-config.h</h>
    </fragment>
    <fragment name="OceanKeyakXOPu2" inherits="parallel_keyak width1600rounds12p4_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/XOPu2/SIMD128-config.h</h>
    </fragment>
    <fragment name="OceanKeyakXOPufull" inherits="parallel_keyak width1600rounds12p4_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/XOPufull/SIMD128-config.h</h>
    </fragment>

    <target name="OceanKeyakSSE2u2Test"    inherits="OceanKeyakSSE2u2 parallel_keyak_tests"/>
    <target name="OceanKeyakSSE2ufullTest" inherits="OceanKeyakSSE2ufull parallel_keyak_tests"/>
    <target name="OceanKeyakXOPu2Test"     inherits="OceanKeyakXOPu2 parallel_keyak_tests"/>
    <target name="OceanKeyakXOPufullTest"  inherits="OceanKeyakXOPufull parallel_keyak_tests"/>

    <target name="crypto_aead/oceankeyakv2/sse2u2"    inherits="OceanKeyakSSE2u2 caesar_ocean_keyak"/>
    <target name="crypto_aead/oceankeyakv2/sse2ufull" inherits="OceanKeyakSSE2ufull caesar_ocean_keyak"/>
    <target name="crypto_aead/oceankeyakv2/xopu2"     inherits="OceanKeyakXOPu2 caesar_ocean_keyak"/>
    <target name="crypto_aead/oceankeyakv2/xopufull"  inherits="OceanKeyakXOPufull caesar_ocean_keyak"/>
    <target name="OceanKeyakSSE2ufullCAESARTest"      inherits="crypto_aead/oceankeyakv2/sse2ufull caesar_ocean_keyak_test"/>
    
    <!-- Lunar Keyak -->

    <fragment name="caesar_lunar_keyak">
        <c>CAESAR/LunarKeyak/encrypt.c</c>
        <h>CAESAR/LunarKeyak/api.h</h>
    </fragment>

    <fragment name="caesar_lunar_keyak_test" inherits="caesar_lunar_keyak crypto_aead_test">
        <c>CAESAR/LunarKeyak/selftest.c</c>
    </fragment>


    <fragment name="reference_lunar" inherits="parallel_keyak width1600rounds12_reference serial_fallback P8" />

    <target name="LunarKeyakReference" inherits="parallel_keyak_tests reference_lunar"/>

    <fragment name="LunarKeyakReferenceCAESAR" inherits="caesar_lunar_keyak reference_lunar"/>

    <target name="crypto_aead/lunarkeyakv2/ref" inherits="LunarKeyakReferenceCAESAR"/>
    <target name="LunarKeyakReferenceCAESARTest" inherits="LunarKeyakReferenceCAESAR caesar_lunar_keyak_test"/>

    <!-- Lunar Keyak using SIMD-128 -->

    <fragment name="width1600rounds12p8_SIMD128-common" inherits="P8 optimized">
        <h>PlSnP/KeccakP-1600-12/8/Multi128/PlSnP-interface.h</h>
        <c>PlSnP/KeccakP-1600-12/MultiSIMD/MultiKeccakP-1600-12.c</c>
        <c>PlSnP/KeccakP-1600-12/SIMD128/DoubleKeccakP-1600-12.c</c>
        <h>PlSnP/KeccakP-1600-12/SIMD128/KeccakP-1600-12-unrolling.macros</h>
        <h>PlSnP/KeccakP-1600-12/SIMD128/Lane-config.h</h>
        <h>PlSnP/KeccakP-1600-12/SIMD128/SnP-interface.h</h>
        <c>PlSnP/PlSnP-FBWL-default.c</c>
        <h>PlSnP/PlSnP-FBWL-default.h</h>
    </fragment>
    
    <fragment name="LunarKeyakSSE2u2" inherits="parallel_keyak width1600rounds12p8_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/SSE2u2/SIMD128-config.h</h>
    </fragment>
    <fragment name="LunarKeyakSSE2ufull" inherits="parallel_keyak width1600rounds12p8_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/SSE2ufull/SIMD128-config.h</h>
    </fragment>
    <fragment name="LunarKeyakXOPu2" inherits="parallel_keyak width1600rounds12p8_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/XOPu2/SIMD128-config.h</h>
    </fragment>
    <fragment name="LunarKeyakXOPufull" inherits="parallel_keyak width1600rounds12p8_SIMD128-common">
        <h>PlSnP/KeccakP-1600-12/SIMD128/XOPufull/SIMD128-config.h</h>
    </fragment>

    <target name="LunarKeyakSSE2u2Test"    inherits="LunarKeyakSSE2u2 parallel_keyak_tests"/>
    <target name="LunarKeyakSSE2ufullTest" inherits="LunarKeyakSSE2ufull parallel_keyak_tests"/>
    <target name="LunarKeyakXOPu2Test"     inherits="LunarKeyakXOPu2 parallel_keyak_tests"/>
    <target name="LunarKeyakXOPufullTest"  inherits="LunarKeyakXOPufull parallel_keyak_tests"/>

    <target name="crypto_aead/lunarkeyakv2/sse2u2"    inherits="LunarKeyakSSE2u2 caesar_lunar_keyak"/>
    <target name="crypto_aead/lunarkeyakv2/sse2ufull" inherits="LunarKeyakSSE2ufull caesar_lunar_keyak"/>
    <target name="crypto_aead/lunarkeyakv2/xopu2"     inherits="LunarKeyakXOPu2 caesar_lunar_keyak"/>
    <target name="crypto_aead/lunarkeyakv2/xopufull"  inherits="LunarKeyakXOPufull caesar_lunar_keyak"/>
    <target name="LunarKeyakSSE2ufullCAESARTest"      inherits="crypto_aead/lunarkeyakv2/sse2ufull caesar_lunar_keyak_test"/>
    
    
    
    <!-- Lunar Keyak using SIMD-256 -->

    <fragment name="width1600rounds12p8_SIMD256" inherits="P8 optimized">
        <h>PlSnP/KeccakP-1600-12/8/Multi256/PlSnP-interface.h</h>
        <c>PlSnP/KeccakP-1600-12/MultiSIMD/MultiKeccakP-1600-12.c</c>
        <c>PlSnP/KeccakP-1600-12/AVX2/QuadKeccakP-1600-12.c</c>
        <h>PlSnP/KeccakP-1600-12/AVX2/KeccakP-1600-12-unrolling.macros</h>
        <h>PlSnP/KeccakP-1600-12/AVX2/Lane-config.h</h>
        <h>PlSnP/KeccakP-1600-12/AVX2/SIMD-config.h</h>
        <h>PlSnP/KeccakP-1600-12/AVX2/SnP-interface.h</h>
        <c>PlSnP/PlSnP-FBWL-default.c</c>
        <h>PlSnP/PlSnP-FBWL-default.h</h>
    </fragment>

    <target name="LunarKeyakSIMD256Test" inherits="width1600rounds12p8_SIMD256 parallel_keyak_tests"/>

    <fragment name="LunarKeyakAVX2CAESAR" inherits="caesar_lunar_keyak parallel_keyak width1600rounds12p8_SIMD256 "/>
    <target name="crypto_aead/lunarkeyakv2/avx2" inherits="LunarKeyakAVX2CAESAR"/>
    <target name="LunarKeyakAVX2CAESARTest" inherits="LunarKeyakAVX2CAESAR caesar_lunar_keyak_test"/>
    
    
    
    
    
    <!-- Ketje -->

    <fragment name="ketje" inherits="common">
        <h>Ketje/Ket/Reference/Ket.h</h>
        <h>Ketje/Ketje.h</h>
        <c>Ketje/Ket/Reference/Ket.c</c>
        <c>Ketje/Ketje.c</c>
    </fragment>

    <fragment name="ketje_tests" inherits="ketje">
        <h>Tests/testSnP.h</h>
        <c>Tests/main.c</c>
        <h>Tests/testKetje.h</h>
        <c>Tests/testKetje.c</c>
        <c>Tests/testSnP.c</c>
        <define>Ketje</define>
    </fragment>

    <!-- KetjeJr -->

    <fragment name="caesar_ketjejr">
        <c>CAESAR/KetjeJr/encrypt.c</c>
        <h>CAESAR/KetjeJr/api.h</h>
    </fragment>

    <fragment name="keccakP200reference" inherits="common">
        <h>SnP/KeccakP-200/KeccakP-200-interface.h</h>
        <c>SnP/KeccakP-200/Reference/KeccakP-200-reference.c</c>
        <h>SnP/KeccakP-200/Reference/SnP-interface.h</h>
        <h>SnP/KeccakF-200/KeccakF-200-interface.h</h>
        <c>SnP/KeccakF-200/Reference/KeccakF-200-reference.c</c>
        <c>Tests/displayIntermediateValues.c</c>
        <h>Tests/displayIntermediateValues.h</h>
    </fragment>

    <target name="KetjeJrReference" inherits="ketje_tests keccakP200reference"/>

    <fragment name="KetjeJrReferenceCAESAR" inherits="caesar_ketjejr ketje keccakP200reference"/>

    <target name="crypto_aead/ketjejrv1/ref" inherits="KetjeJrReferenceCAESAR"/>

    <target name="KetjeJrReferenceCAESARTest" inherits="KetjeJrReferenceCAESAR crypto_aead_test">
        <c>CAESAR/KetjeJr/selftest.c</c>
    </target>

    <!-- KetjeSr -->

    <fragment name="caesar_ketjesr">
        <c>CAESAR/KetjeSr/encrypt.c</c>
        <h>CAESAR/KetjeSr/api.h</h>
    </fragment>

    <fragment name="keccakP400reference" inherits="common">
        <h>SnP/KeccakP-400/KeccakP-400-interface.h</h>
        <c>SnP/KeccakP-400/Reference/KeccakP-400-reference.c</c>
        <h>SnP/KeccakP-400/Reference/SnP-interface.h</h>
        <h>SnP/KeccakF-400/KeccakF-400-interface.h</h>
        <c>SnP/KeccakF-400/Reference/KeccakF-400-reference.c</c>
        <c>Tests/displayIntermediateValues.c</c>
        <h>Tests/displayIntermediateValues.h</h>
    </fragment>

    <target name="KetjeSrReference" inherits="ketje_tests keccakP400reference"/>

    <fragment name="KetjeSrReferenceCAESAR" inherits="caesar_ketjesr ketje keccakP400reference"/>

    <target name="crypto_aead/ketjesrv1/ref" inherits="KetjeSrReferenceCAESAR"/>

    <target name="KetjeSrReferenceCAESARTest" inherits="KetjeSrReferenceCAESAR crypto_aead_test">
        <c>CAESAR/KetjeSr/selftest.c</c>
    </target>

</build>
